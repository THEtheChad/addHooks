/**
 * @package addHooks
 * @author  THEtheChad
 * @license MIT
 * @version 0.1.0
 * @published 2014-05-23
 * @fileOverview A method for the Function prototype that creates 4 hooks for executing actions at various stages of a functions execution.
 */
"use strict";Function.prototype.addHooks=function(){function a(){var c,d;return c=Array.prototype.slice.call(arguments),a.fire("before",this,c,d),c=a.fire("modInput",this,c,c),d=b.apply(this,c),d=a.fire("modOutput",this,d,d),a.fire("after",this,c,d),d}var b=this;return a.actions={before:[],after:[],modOutput:[],modInput:[]},a.before=function(b){a.actions.before.push(b)},a.after=function(b){a.actions.after.push(b)},a.modInput=function(b){a.actions.modInput.push(b)},a.modOutput=function(b){a.actions.modOutput.push(b)},a.fire=function(b,c,d,e){for(var f=a.actions[b],g=0,h=f.length;h>g;g++)try{e=f[g].call(c,d,e)}catch(i){}return e},a};